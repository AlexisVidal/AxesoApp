<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPerson" xml:space="preserve">
    <value>Add person</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="AgeRange" xml:space="preserve">
    <value>Must be between 10 and 130</value>
  </data>
  <data name="AgeRequired" xml:space="preserve">
    <value>Age is required</value>
  </data>
  <data name="Agree" xml:space="preserve">
    <value>I agree with the terms and policy</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Axeso</value>
  </data>
  <data name="Biography" xml:space="preserve">
    <value>Biography</value>
  </data>
  <data name="ChooseYourLanguage" xml:space="preserve">
    <value>Choose your language</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="FirstNameLong" xml:space="preserve">
    <value>Must be less than 50 characters</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="HaveAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LastNameLong" xml:space="preserve">
    <value>Must be less than 50 characters</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Login in. To see it in action</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="LogOn" xml:space="preserve">
    <value>Log on</value>
  </data>
  <data name="NoAccount" xml:space="preserve">
    <value>Do not have an account?</value>
  </data>
  <data name="PasswordForgot" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telephone number</value>
  </data>
  <data name="PhoneInvalid" xml:space="preserve">
    <value>The phone number entered is not valid</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>You must enter your phone</value>
  </data>
  <data name="PlatformTitle" xml:space="preserve">
    <value>Web Platform</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to Axeso</value>
  </data>
  <data name="NamePlaceHolder" xml:space="preserve">
    <value>Enter your full name</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="Mailbox" xml:space="preserve">
    <value>Mailbox</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search for something...</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>You must enter an email</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="EmailPlaceHolder" xml:space="preserve">
    <value>Enter an email</value>
  </data>
  <data name="Rememberme" xml:space="preserve">
    <value>Rememberme in this device</value>
  </data>
  <data name="PasswordValidation" xml:space="preserve">
    <value>You must enter a password</value>
  </data>
  <data name="SomethingWrong" xml:space="preserve">
    <value>Something was wrong, please try later</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordPlaceHolder" xml:space="preserve">
    <value>Enter your password...</value>
  </data>
  <data name="Forgot" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="MyLanguages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="NameValidation" xml:space="preserve">
    <value>You must enter a valid full name</value>
  </data>
  <data name="PhonePlaceHolder" xml:space="preserve">
    <value>Enter phone number</value>
  </data>
</root>